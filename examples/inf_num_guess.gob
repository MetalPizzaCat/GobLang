# simple game where you guess the number
# written for indev version of goblang 0.1
# exists as an example of complex code structure
# use a while(true) loop to mae use of "break"
    
while(true){
    
    # create some local variables
    let guess_attempts = 0;
    let guess = -1;
    
    # rand_range is a function added by the interpreter itself
    # since this is just a global variable, anything can override it
    let number = rand_range(0, 25);
    print("Guess the number from 0 to 25 and you have 5 attempts to so! Write your input: ");
    while(guess != number){
        # input is also a global exposed function, just calls std::cout
        # to_int is required because there is no implicit type conversion
        guess = to_int(input());
        
        # use if-elif-else to check if value is guessed correctly
        if(guess > number){
            print("Too big!");
        }
        elif(guess < number){
            print("Too small!");
        }
        else{
            print("Correct!");
            break;
        }
        guess_attempts = guess_attempts + 1; 

        # combined expressions do work
        if(guess_attempts >= 5 && guess != number){
           print("You loose :(");
           # use break to exit guessing loop
           break;
        }
    }
   
    print("Do you want to try again? [y/n]");
    
    let choice = input();
    # use a check to infintely ask use for input
    while(choice != "y" && choice != "n"){
        print("[y/n]");
        choice = input();
    }
    if(choice == "n"){
        break;
    }
}